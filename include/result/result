// -*- C++ -*-
// This file is a part of the IncludeOS unikernel - www.includeos.org
//
// Copyright 2017 Oslo and Akershus University College of Applied Sciences
// and Alfred Bratterud
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once
#ifndef INCLUDEOS_RESULT_HPP
#define INCLUDEOS_RESULT_HPP

#include <error>

/**
 * This class is a representation of the result from an
 * operation
 */
template<typename T>
struct Result {
  /**
   * Constructor
   *
   * Create a result object as an error
   *
   * @param error
   *  The error object to represent the result
   */
  Result(Error_t error)
    : error_{std::move(error)}
    , value_{}
  {}

  /**
   * Constructor
   *
   * Create a result object with a given value
   *
   * @param value
   *  The value to place inside the result object
   */
  Result(T&& value)
    : value_{std::move(value)}
  {}

  /**
   * Default copy constructor
   */
  Result(const Result&) = default;

  /**
   * Default move constructor
   */
  Result(Result&&) = default;

  /**
   * Default copy assignment operator
   */
  Result& operator=(const Result&) = default;

  /**
   * Default move assignment operator
   */
  Result& operator=(Result&&) = default;

  /**
   * Default destructor
   */
  ~Result() = default;

  Error_t error_;
  T       value_;
}; //< class Result

#endif //< INCLUDEOS_RESULT_HPP
